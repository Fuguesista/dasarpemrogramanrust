"use strict";(self.webpackChunkdasarpemrogramanrust=self.webpackChunkdasarpemrogramanrust||[]).push([[531],{3905:(a,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>c});var n=t(7294);function r(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function i(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function o(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function s(a,e){if(null==a)return{};var t,n,r=function(a,e){if(null==a)return{};var t,n,r={},i=Object.keys(a);for(n=0;n<i.length;n++)t=i[n],e.indexOf(t)>=0||(r[t]=a[t]);return r}(a,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);for(n=0;n<i.length;n++)t=i[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(r[t]=a[t])}return r}var l=n.createContext({}),p=function(a){var e=n.useContext(l),t=e;return a&&(t="function"==typeof a?a(e):o(o({},e),a)),t},u=function(a){var e=p(a.components);return n.createElement(l.Provider,{value:e},a.children)},d={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(a,e){var t=a.components,r=a.mdxType,i=a.originalType,l=a.parentName,u=s(a,["components","mdxType","originalType","parentName"]),k=p(t),c=r,m=k["".concat(l,".").concat(c)]||k[c]||d[c]||i;return t?n.createElement(m,o(o({ref:e},u),{},{components:t})):n.createElement(m,o({ref:e},u))}));function c(a,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof a||r){var i=t.length,o=new Array(i);o[0]=k;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=a,s.mdxType="string"==typeof a?a:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},231:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const i={sidebar_position:7},o="A.7. Konstanta",s={unversionedId:"basic/konstanta",id:"basic/konstanta",title:"A.7. Konstanta",description:"Chapter ini membahas tentang konstanta di bahasa Rust.",source:"@site/docs/basic/konstanta.md",sourceDirName:"basic",slug:"/basic/konstanta",permalink:"/basic/konstanta",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"A.6. Tipe Data: String Literal (&str)",permalink:"/basic/tipe-data-string-literal"},next:{title:"A.8. (WIP) Operator",permalink:"/basic/operator"}},l={},p=[{value:"A.7.1. Keyword <code>const</code>",id:"a71-keyword-const",level:2},{value:"A.7.2. Keyword <code>static</code>",id:"a72-keyword-static",level:2},{value:"Source code &amp; referensi",id:"source-code--referensi",level:2}],u={toc:p};function d(a){let{components:e,...t}=a;return(0,r.kt)("wrapper",(0,n.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"a7-konstanta"},"A.7. Konstanta"),(0,r.kt)("p",null,"Chapter ini membahas tentang konstanta di bahasa Rust."),(0,r.kt)("h2",{id:"a71-keyword-const"},"A.7.1. Keyword ",(0,r.kt)("inlineCode",{parentName:"h2"},"const")),(0,r.kt)("p",null,"Berbeda dengan variabel yang dideklarasikan menggunakan keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"let"),", konstanta dibuat dengan keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"const"),". Contoh:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'const LABEL: &str = "nilai pi adalah:";\nconst PI: f32 = 22.0/7.0;\nprintln!("{} {}", LABEL, PI);\n')),(0,r.kt)("p",null,"Bisa dilihat di kode di atas, konstanta ",(0,r.kt)("inlineCode",{parentName:"p"},"LABEL")," merupakan string dengan nilai ",(0,r.kt)("inlineCode",{parentName:"p"},'"nilai pi adalah:"'),", sedang ",(0,r.kt)("inlineCode",{parentName:"p"},"PI")," memiliki nilai bertipe float hasil dari operasi ",(0,r.kt)("inlineCode",{parentName:"p"},"22./7.0"),"."),(0,r.kt)("p",null,"Dalam pendefinisian konstanta, tipe data harus dituliskan secara eksplist. Deklarasi seperti ",(0,r.kt)("inlineCode",{parentName:"p"},'const DATA = "x"')," akan menghasilkan error saat proses kompilasi. Dan aturan ini berlaku untuk semua tipe data yang dipergunakan untuk pendefinisian konstanta."),(0,r.kt)("p",null,"Nilai sebuah konstanta juga bisa dari variabel atau konstanta lain, atau hasil sebuah operasi seperti operasi aritmatika ",(0,r.kt)("inlineCode",{parentName:"p"},"22.0/7.0"),"."),(0,r.kt)("p",null,"Disini penulis tidak menggunakan ",(0,r.kt)("inlineCode",{parentName:"p"},"22/7")," karena hasilnya akan bertipe integer. Di Rust operasi aritmatika harus dilakukan dengan tipe data yang sama, dan hasilnya akan memiliki tipe data sesuai operand. Lebih detailnya akan kita bahas pada bab selanjutnya."),(0,r.kt)("h2",{id:"a72-keyword-static"},"A.7.2. Keyword ",(0,r.kt)("inlineCode",{parentName:"h2"},"static")),(0,r.kt)("p",null,"Ada cara lain untuk membuat konstanta, menggunakan keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"static"),". Contohnya seperti pada kode berikut. Konstanta ",(0,r.kt)("inlineCode",{parentName:"p"},"NUMBER")," didefinisikan di luar blok fungsi main, lalu di print di dalam fungsi main."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'static NUMBER: i32 = 18;\n\nfn main() {\n    // ...\n\n    println!("{}", NUMBER);\n    // output ==> 18\n}\n')),(0,r.kt)("p",null,"Pertanyaan, bedanya apa dengan konstanta yang dibuat via keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"const"),"? secara teknis bedanya ada di bagaimana manajemen dan alokasi memori dilakukan di belakang layar."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Di Rust, konstanta yang dibuat via ",(0,r.kt)("inlineCode",{parentName:"p"},"const")," tidak memiliki alamat memori yang pasti, dan setiap kali dipergunakan maka terjadi proses copy-paste value. Sedangkan konstanta yang dibuat via keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"static")," mempunyai alamat memori yg fix/pasti."),(0,r.kt)("p",{parentName:"blockquote"},"Nantinya akan dibahas lebih mendetail pada chapter khusus untuk pembahasan ",(0,r.kt)("inlineCode",{parentName:"p"},"static"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"source-code--referensi"},"Source code & referensi"),(0,r.kt)("p",null,"Source code praktek pada chapter ini bisa dilihat di link berikut:"),(0,r.kt)("pre",null,(0,r.kt)("a",{href:"https://github.com/novalagung/dasarpemrogramanrust/tree/master/hands-on/app6_konstanta"},"github.com/novalagung/dasarpemrogramanrust/tree/master/hands-on/app6_konstanta")),(0,r.kt)("p",null,"Beberapa referensi terkait chapter ini:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/rust-by-example/custom_types/constants.html"},"https://doc.rust-lang.org/rust-by-example/custom_types/constants.html")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://web.mit.edu/rust-lang_v1.25/arch/amd64_ubuntu1404/share/doc/rust/html/book/first-edition/const-and-static.html"},"https://web.mit.edu/rust-lang_v1.25/arch/amd64_ubuntu1404/share/doc/rust/html/book/first-edition/const-and-static.html")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://users.rust-lang.org/t/const-vs-static/52951/2"},"https://users.rust-lang.org/t/const-vs-static/52951/2"))),(0,r.kt)("hr",null))}d.isMDXComponent=!0}}]);